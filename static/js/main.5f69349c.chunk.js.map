{"version":3,"sources":["components/Nav/logo.png","cardImages sync nonrecursive /.(png|jpe?g|svg)$","cardImages/assasinsCreed.jpg","cardImages/destiny.jpg","cardImages/godOfWar.jpg","cardImages/luigi.png","cardImages/mario.jpg","cardImages/massEffect.jpg","cardImages/masterChief.jpg","cardImages/megaMan.jpg","cardImages/nathanDrake.png","cardImages/redDead.jpg","cardImages/sonic.png","cardImages/zelda.jpg","components/MainHeader/index.js","components/Card/index.js","components/Nav/index.js","components/Modal/index.js","services/GiphyAPIService.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./assasinsCreed.jpg","./destiny.jpg","./godOfWar.jpg","./luigi.png","./mario.jpg","./massEffect.jpg","./masterChief.jpg","./megaMan.jpg","./nathanDrake.png","./redDead.jpg","./sonic.png","./zelda.jpg","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","Object","resolve","MainHeader","props","react_default","a","createElement","className","mainText","detailText","trim","length","Card","onClick","onClickMethod","imageUrl","src","alt","imageText","Nav","logo","score","topScore","Modal","modalElement","document","getElementById","this","window","M","init","endingTop","onCloseEnd","modalInstance","getInstance","open","header","imageAlt","React","Component","GiphyAPIService","getRandomPicture","searchTerm","axios","get","concat","App","state","winGif","winGifText","imagesSelected","requireAll","requireContext","images","_this","require","setModalGif","then","res","setState","data","image_url","title","componentDidMount","handleOnCardClick","message","includes","$","effect","push","winModal","displayModal","toastClass","toast","html","classes","randomizeArray","originalArray","newArray","tempArray","toConsumableArray","forEach","randomIndex","Math","floor","random","splice","_this2","components_Nav","components_MainHeader","image","components_Card","key","components_Modal","ref","ReactDOM","render","src_App_0"],"mappings":"wFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yNCAxC,IAAAC,EAAA,CACAC,sBAAA,GACAC,gBAAA,GACAC,iBAAA,GACAC,cAAA,GACAC,cAAA,GACAC,mBAAA,GACAC,oBAAA,GACAC,gBAAA,GACAC,oBAAA,GACAC,gBAAA,GACAC,cAAA,GACAC,cAAA,IAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAhB,EAAAiB,GAEA,SAAAC,EAAAF,GACA,IAAAC,EAAAf,EAAAc,GACA,KAAAC,EAAA,IACA,IAAAE,EAAA,IAAAC,MAAA,uBAAAJ,EAAA,KAEA,MADAG,EAAAE,KAAA,mBACAF,EAEA,OAAAF,EAEAF,EAAAO,KAAA,WACA,OAAAC,OAAAD,KAAApB,IAEAa,EAAAS,QAAAN,EACApB,EAAAC,QAAAgB,EACAA,EAAAE,GAAA,oBClCAnB,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+JCgBzBwB,SAbI,SAAAC,GACf,OACIC,EAAAC,EAAAC,cAAA,OACIC,UAAU,sCACVH,EAAAC,EAAAC,cAAA,UAAKH,EAAMK,UACVL,EAAMM,WAAWC,OAAOC,OAAS,GAC9BP,EAAAC,EAAAC,cAAA,UAAKH,EAAMM,eCOZG,SAbF,SAAAT,GAET,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCAAyCM,QAAW,kBAAMV,EAAMW,cAAcX,EAAMY,YAC/FX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBS,IAAKb,EAAMY,SAAUE,IAAKd,EAAMe,0CCgBrEC,EArBH,SAAAhB,GACR,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaS,IAAKI,IAAMH,IAAI,SAD/C,QAGAb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACXH,EAAAC,EAAAC,cAAA,sBAAcH,EAAMkB,MAApB,MACAjB,EAAAC,EAAAC,cAAA,0BAAkBH,EAAMmB,gBCkBrCC,qMAzBP,IAAIC,EAAeC,SAASC,eAAeC,KAAKxB,MAAMT,IACtDkC,OAAOC,EAAEN,MAAMO,KAAKN,EAAc,CAACO,UAAW,GAAIC,WAAYL,KAAKxB,MAAM6B,aACzEL,KAAKM,cAAgBL,OAAOC,EAAEN,MAAMW,YAAYV,0CAKhDG,KAAKM,cAAcE,wCAInB,OACI/B,EAAAC,EAAAC,cAAA,OAAKZ,GAAIiC,KAAKxB,MAAMT,GAAIa,UAAU,oBAC9BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,UAAKqB,KAAKxB,MAAMiC,QAChBhC,EAAAC,EAAAC,cAAA,OAAKU,IAAKW,KAAKxB,MAAMY,SAAUE,IAAKU,KAAKxB,MAAMkC,oBApB/CC,IAAMC,qCCCXC,EAAA,CAEXC,iBAAkB,SAAUC,GACxB,OAAOC,IAAMC,IAAN,GAAAC,OANG,gCAMH,oBAAAA,OALA,mCAKA,SAAAA,OAAuDH,MCmJvDI,6MAjJbC,MAAQ,CACN1B,MAAO,EACPC,SAAU,EACV0B,OAAQ,GACRC,WAAY,MAGdC,eAAiB,KAIjBC,WAAa,SAAAC,GACX,OAAOA,EAAerD,OAAOpB,IAAIyE,MAInCC,OAASC,EAAKH,WAAWI,SAGzBC,YAAc,WACZhB,EAAgBC,iBAAiB,WAC9BgB,KAAK,SAAAC,GACJJ,EAAKK,SAAS,CACZX,OAAQU,EAAIE,KAAKA,KAAKC,UACtBZ,WAAYS,EAAIE,KAAKA,KAAKE,aAKlCC,kBAAoB,WAElBT,EAAKE,iBAIPQ,kBAAoB,SAAAjD,GAClB,IAAIkD,EAAU,GAGTX,EAAKJ,eAAegB,SAASnD,IA6BhCuC,EAAKJ,eAAiB,GACtBe,EAAU,2BAGVX,EAAKK,SAAS,SAAAZ,GAAK,MAAK,CACtBzB,SAAUyB,EAAM1B,MAAQ0B,EAAMzB,SAAWyB,EAAM1B,MAAQ0B,EAAMzB,SAC7DD,MAAO,KAGTO,OAAOuC,EAAE,kBAAkBC,OAAO,WArClCd,EAAKJ,eAAemB,KAAKtD,GAGrBuC,EAAKJ,eAAevC,SAAW2C,EAAKD,OAAO1C,QAC7C2C,EAAKJ,eAAiB,GACtBe,EAAU,WAGVX,EAAKK,SAAS,CACZrC,SAAUgC,EAAKD,OAAO1C,OACtBU,MAAO,IAITiC,EAAKgB,SAASC,iBAIdN,EAAU,yBAGVX,EAAKK,SAAS,SAAAZ,GAAK,MAAK,CACtB1B,MAAO0B,EAAM1B,MAAQ,OAmB3B,IAAMmD,EAAaP,EAAQC,SAAS,eAAiB,iBAAoBD,EAAQC,SAAS,OAAS,WAAa,eAEhHtC,OAAOC,EAAE4C,MAAM,CACbC,KAAMT,EACNU,QAASH,IAIXlB,EAAKD,OAASC,EAAKsB,eAAetB,EAAKD,WAGzCuB,eAAiB,SAAAC,GACf,IAAMC,EAAW,GACXC,EAAS/E,OAAAgF,EAAA,EAAAhF,CAAO6E,GAOtB,OALAA,EAAcI,QAAQ,WACpB,IAAMC,EAAcC,KAAKC,MAAMD,KAAKE,SAAWN,EAAUpE,QACzDmE,EAAST,KAAKU,EAAUO,OAAOJ,EAAa,GAAG,MAG1CJ,2EAGA,IAAAS,EAAA5D,KAEP,OACEvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEbH,EAAAC,EAAAC,cAACkF,EAAD,CACEnE,MAAOM,KAAKoB,MAAM1B,MAClBC,SAAUK,KAAKoB,MAAMzB,WAGvBlB,EAAAC,EAAAC,cAACmF,EAAD,CACEjF,SAAS,oBACTC,WAAW,uFAGbL,EAAAC,EAAAC,cAAA,OAAKZ,GAAG,gBAAgBa,UAAU,aAChCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEZoB,KAAK0B,OAAO1E,IAAI,SAAA+G,GAAK,OACpBtF,EAAAC,EAAAC,cAACqF,EAAD,CACEC,IAAKF,EACL3E,SAAU2E,EACVxE,UAAU,OACVJ,cAAeyE,EAAKvB,wBAM5B5D,EAAAC,EAAAC,cAACuF,EAAD,CACEnG,GAAG,WACH0C,OAAO,WACPrB,SAAUY,KAAKoB,MAAMC,OACrB9B,UAAWS,KAAKoB,MAAME,WACtB6C,IAAK,SAAAA,GAASP,EAAKjB,SAAWwB,GAC9B9D,WAAaL,KAAK6B,sBA5IVjB,aCHlBwD,IAASC,OAAO5F,EAAAC,EAAAC,cAAC2F,EAAD,MAASxE,SAASC,eAAe","file":"static/js/main.5f69349c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.39cac033.png\";","var map = {\n\t\"./assasinsCreed.jpg\": 50,\n\t\"./destiny.jpg\": 51,\n\t\"./godOfWar.jpg\": 52,\n\t\"./luigi.png\": 53,\n\t\"./mario.jpg\": 54,\n\t\"./massEffect.jpg\": 55,\n\t\"./masterChief.jpg\": 56,\n\t\"./megaMan.jpg\": 57,\n\t\"./nathanDrake.png\": 58,\n\t\"./redDead.jpg\": 59,\n\t\"./sonic.png\": 60,\n\t\"./zelda.jpg\": 61\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 49;","module.exports = __webpack_public_path__ + \"static/media/assasinsCreed.5b76da46.jpg\";","module.exports = __webpack_public_path__ + \"static/media/destiny.a8f9c6d7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/godOfWar.21c9e3e4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/luigi.6c2cfaeb.png\";","module.exports = __webpack_public_path__ + \"static/media/mario.e9c222f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/massEffect.322dc94e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/masterChief.26073be8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/megaMan.b465a2ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nathanDrake.d65d5d83.png\";","module.exports = __webpack_public_path__ + \"static/media/redDead.1fb079c5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sonic.53696294.png\";","module.exports = __webpack_public_path__ + \"static/media/zelda.150b52e8.jpg\";","import React from 'react';\r\nimport './style.css';\r\n\r\nconst MainHeader = props => {\r\n    return (\r\n        <div\r\n            className=\"mainHeader center-align white-text\">\r\n            <h1>{props.mainText}</h1>\r\n            {props.detailText.trim().length > 0 &&\r\n                <h3>{props.detailText}</h3>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default MainHeader;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nconst Card = props => {\r\n\r\n    return (\r\n        <div className=\"reactCard col s12 m6 l3\" >\r\n            <div className=\"card hoverable waves-effect waves-dark\" onClick= { () => props.onClickMethod(props.imageUrl) }>\r\n                <div className=\"card-image\">\r\n                    <img className=\"reactCardImage\" src={props.imageUrl} alt={props.imageText} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport './style.css';\r\nimport logo from './logo.png'\r\n\r\nconst Nav = props => {\r\n    return (\r\n        <div className=\"navbar-fixed\">\r\n            <nav>\r\n                <div className=\"nav-wrapper black\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12 m6 left-align myNavItem\">\r\n                            <img className=\"vgmNavLogo\" src={logo} alt=\"logo\"></img> VGM\r\n                        </div>\r\n                        <div className=\"col s12 m6 right-align myNavItem\">\r\n                            <span>Score: {props.score}, </span>\r\n                            <span>Top Score: {props.topScore}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nclass Modal extends React.Component {\r\n    modalInstance;\r\n\r\n    componentDidMount() {\r\n        //Initialize the materialize modal so it can be used later\r\n        var modalElement = document.getElementById(this.props.id);\r\n        window.M.Modal.init(modalElement, {endingTop: 20, onCloseEnd: this.props.onCloseEnd});\r\n        this.modalInstance = window.M.Modal.getInstance(modalElement);\r\n    };\r\n\r\n    displayModal() {\r\n        //Open the modal window\r\n        this.modalInstance.open();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div id={this.props.id} className=\"reactModal modal\">\r\n                <div className=\"modal-content\">\r\n                    <h4>{this.props.header}</h4>\r\n                    <img src={this.props.imageUrl} alt={this.props.imageAlt} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Modal;\r\n","import axios from \"axios\";\r\nconst giphyHost = \"https://api.giphy.com/v1/gifs\";\r\nconst apiKey = \"BhEB2InhZbmP96xsZoWBz15voVYxA47a\";\r\n\r\nexport default {\r\n    //Get a random gif from the giphy service\r\n    getRandomPicture: function (searchTerm) {\r\n        return axios.get(`${giphyHost}/random?api_key=${apiKey}&tag=${searchTerm}`);\r\n    }\r\n};\r\n","import React, { Component } from 'react';\nimport MainHeader from './components/MainHeader'\nimport Card from './components/Card'\nimport Nav from './components/Nav'\nimport Modal from './components/Modal'\nimport './App.css';\nimport GiphyAPIService from './services/GiphyAPIService'\n\nclass App extends Component {\n  state = {\n    score: 0,\n    topScore: 0,\n    winGif: \"\",\n    winGifText: \"\"\n  };\n\n  imagesSelected = [];\n  winModal;\n\n  //Function that will require all the images into the code\n  requireAll = requireContext => {\n    return requireContext.keys().map(requireContext);\n  };\n\n  //Get all images that are in the cardImages folder\n  images = this.requireAll(require.context('./cardImages', false, /\\.(png|jpe?g|svg)$/));\n\n  //Function that will set the modal gif info\n  setModalGif = () => {\n    GiphyAPIService.getRandomPicture(\"winning\")\n      .then(res => {\n        this.setState({\n          winGif: res.data.data.image_url,\n          winGifText: res.data.data.title\n        });\n      });\n  };\n\n  componentDidMount = () => {\n    //Get a modal gif to display initially\n    this.setModalGif();\n  };\n\n  //Function that will handle the on click when a user clicks on a card\n  handleOnCardClick = imageUrl => {\n    let message = \"\";\n\n    //User has guessed correctly\n    if (!this.imagesSelected.includes(imageUrl)) {\n      this.imagesSelected.push(imageUrl);\n\n      //User has won\n      if (this.imagesSelected.length === this.images.length) {\n        this.imagesSelected = [];\n        message = \"You won!\";\n\n        //Set the state variables\n        this.setState({\n          topScore: this.images.length,\n          score: 0\n        });\n\n        //Open the win modal\n        this.winModal.displayModal();\n      }\n      //User has not won but has guessed correctly\n      else {\n        message = \"You guessed correctly!\";\n\n        //Set the state\n        this.setState(state => ({\n          score: state.score + 1\n        }));\n      }\n    }\n    //User has guessed incorrectly\n    else {\n      this.imagesSelected = [];\n      message = \"You guessed incorrectly!\";\n\n      //Set the state\n      this.setState(state => ({\n        topScore: state.score > state.topScore ? state.score : state.topScore,\n        score: 0\n      }));\n\n      window.$(\"#cardContainer\").effect(\"shake\")\n    }\n\n    //Display a toast on screen with the message of if they guessed correctly, incorrectly, or if they won\n    const toastClass = message.includes(\"incorrectly\") ? \"incorrectToast\" : (message.includes(\"won\") ? \"wonToast\" : \"correctToast\");\n\n    window.M.toast({\n      html: message,\n      classes: toastClass\n    });\n\n    //Randomize the images\n    this.images = this.randomizeArray(this.images); //this.images.sort(() => Math.random() - 0.5);\n  };\n\n  randomizeArray = originalArray => {\n    const newArray = [];\n    const tempArray = [...originalArray];\n\n    originalArray.forEach(() => {\n      const randomIndex = Math.floor(Math.random() * tempArray.length);\n      newArray.push(tempArray.splice(randomIndex, 1)[0]);\n    });\n\n    return newArray;\n  };\n\n  render() {\n\n    return (\n      <div className=\"App\">\n\n        <Nav\n          score={this.state.score}\n          topScore={this.state.topScore}\n        />\n\n        <MainHeader\n          mainText=\"Video Game Memory\"\n          detailText=\"Click on a video game image to earn points, but don't click on any more than once!\"\n        />\n\n        <div id=\"cardContainer\" className=\"container\">\n          <div className=\"row\">\n\n            {this.images.map(image =>\n              <Card\n                key={image}\n                imageUrl={image}\n                imageText=\"test\"\n                onClickMethod={this.handleOnCardClick} />\n            )}\n\n          </div>\n        </div>\n\n        <Modal\n          id=\"winModal\"\n          header=\"You Won!\"\n          imageUrl={this.state.winGif}\n          imageText={this.state.winGifText}\n          ref={ref => { this.winModal = ref }}\n          onCloseEnd={ this.setModalGif } />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}